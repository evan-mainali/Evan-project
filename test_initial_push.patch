Subject: [PATCH] test initial push
---
Index: .gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.gitignore b/.gitignore
new file mode 100644
--- /dev/null	(revision 85b3c7f75e7906338a741d28add406514a2b3d95)
+++ b/.gitignore	(revision 85b3c7f75e7906338a741d28add406514a2b3d95)
@@ -0,0 +1,29 @@
+### IntelliJ IDEA ###
+out/
+!**/src/main/**/out/
+!**/src/test/**/out/
+
+### Eclipse ###
+.apt_generated
+.classpath
+.factorypath
+.project
+.settings
+.springBeans
+.sts4-cache
+bin/
+!**/src/main/**/bin/
+!**/src/test/**/bin/
+
+### NetBeans ###
+/nbproject/private/
+/nbbuild/
+/dist/
+/nbdist/
+/.nb-gradle/
+
+### VS Code ###
+.vscode/
+
+### Mac OS ###
+.DS_Store
\ No newline at end of file
Index: .idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
new file mode 100644
--- /dev/null	(revision 85b3c7f75e7906338a741d28add406514a2b3d95)
+++ b/.idea/.gitignore	(revision 85b3c7f75e7906338a741d28add406514a2b3d95)
@@ -0,0 +1,3 @@
+# Default ignored files
+/shelf/
+/workspace.xml
Index: .idea/encodings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/encodings.xml b/.idea/encodings.xml
new file mode 100644
--- /dev/null	(revision 85b3c7f75e7906338a741d28add406514a2b3d95)
+++ b/.idea/encodings.xml	(revision 85b3c7f75e7906338a741d28add406514a2b3d95)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Encoding">
+    <file url="file://$PROJECT_DIR$/Image.jfif" charset="UTF-16" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
new file mode 100644
--- /dev/null	(revision 85b3c7f75e7906338a741d28add406514a2b3d95)
+++ b/.idea/misc.xml	(revision 85b3c7f75e7906338a741d28add406514a2b3d95)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectRootManager" version="2" project-jdk-name="openjdk-23" project-jdk-type="JavaSDK">
+    <output url="file://$PROJECT_DIR$/out" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules.xml b/.idea/modules.xml
new file mode 100644
--- /dev/null	(revision 85b3c7f75e7906338a741d28add406514a2b3d95)
+++ b/.idea/modules.xml	(revision 85b3c7f75e7906338a741d28add406514a2b3d95)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/main.iml" filepath="$PROJECT_DIR$/main.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
new file mode 100644
--- /dev/null	(revision 85b3c7f75e7906338a741d28add406514a2b3d95)
+++ b/.idea/vcs.xml	(revision 85b3c7f75e7906338a741d28add406514a2b3d95)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: main.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/main.iml b/main.iml
new file mode 100644
--- /dev/null	(revision 85b3c7f75e7906338a741d28add406514a2b3d95)
+++ b/main.iml	(revision 85b3c7f75e7906338a741d28add406514a2b3d95)
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: src/CurrentDate.java
===================================================================
diff --git a/src/CurrentDate.java b/src/CurrentDate.java
new file mode 100644
--- /dev/null	(revision 85b3c7f75e7906338a741d28add406514a2b3d95)
+++ b/src/CurrentDate.java	(revision 85b3c7f75e7906338a741d28add406514a2b3d95)
@@ -0,0 +1,82 @@
+import java.time.DayOfWeek;
+import java.time.LocalDate;
+import java.time.DayOfWeek;
+
+
+public class CurrentDate {
+
+
+    protected DayOfWeek currentday;
+    protected String date;
+
+    CurrentDate(){
+        LocalDate currentdate = LocalDate.now();
+        String date = currentdate.toString();
+        currentday= currentdate.getDayOfWeek();
+        this.date=date;
+
+    }
+
+
+
+    int getCurrentday(){ // this method displays the day like Wedneday.
+
+        int counter =0;
+        String day="";
+        for(char c :date.toCharArray()){
+
+            if(c=='-'){
+                counter++;
+            }
+            else if(counter==2){
+                day+=Character.toString(c);
+            }
+
+        }
+        return Integer.parseInt(day);
+
+    }
+
+    int  getCurrentMonth(){ // this method gets the current month;
+
+        int counter=0;
+        int month=0;
+        for(char c:date.toCharArray()){
+
+            if(c=='-'){
+                counter++;
+            }
+            else if(counter==1){
+                month+=Integer.parseInt(String.valueOf(c));
+            }
+
+        }
+        return month;
+    }
+
+
+    int getCurrentYear(){ // this method gets the current year
+        String year="";
+        int counter=0;
+
+        for(char c:date.toCharArray()){
+
+            if(c=='-') {
+                counter++;
+            }
+            else if(counter==0){
+                year+=Character.toString(c);
+            }
+        }
+        return Integer.parseInt(year);
+
+
+    }
+
+
+
+
+
+
+
+}
Index: src/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Main.java b/src/Main.java
new file mode 100644
--- /dev/null	(revision 85b3c7f75e7906338a741d28add406514a2b3d95)
+++ b/src/Main.java	(revision 85b3c7f75e7906338a741d28add406514a2b3d95)
@@ -0,0 +1,30 @@
+
+import java.io.*;
+
+
+//TIP To <b>Run</b> code, press <shortcut actionId="Run"/> or
+// click the <icon src="AllIcons.Actions.Execute"/> icon in the gutter.
+public class Main {
+    public static void main(String[] args) {
+
+
+        CurrentDate date = new CurrentDate();
+
+        int year = date.getCurrentYear();
+        int month = date.getCurrentMonth();
+
+        Months monthcal = new Months(year,month);
+        monthcal.isleapyear();
+        monthcal.convertintoMonth();
+        monthcal.displayStartDay();
+        monthcal.displaymonthCalander();
+
+
+
+
+
+
+    }
+
+
+}
\ No newline at end of file
Index: src/Months.java
===================================================================
diff --git a/src/Months.java b/src/Months.java
new file mode 100644
--- /dev/null	(revision 85b3c7f75e7906338a741d28add406514a2b3d95)
+++ b/src/Months.java	(revision 85b3c7f75e7906338a741d28add406514a2b3d95)
@@ -0,0 +1,97 @@
+import java.time.DayOfWeek;
+import java.time.YearMonth;
+import java.time.LocalDate;
+public class Months extends  CurrentDate{
+
+    protected String[] months = {"January","Febuary","March","April","May","June","July","August","September","October","November","December"};
+    protected String[][] monthcalendar= new String[7][5];
+    protected String[] days = {"MONDAY","TUESDAY","WEDNESDAY","THURSDAY","FRIDAY","SATURDAY","SUNDAY"};
+
+
+    private int useryear;
+    private int month;
+    private int indexmonth;
+
+    Months(int year,int month){
+        useryear=year;
+        this.month=month;
+
+    }
+
+    String displayStartDay(){ // this method finds the value of the start day of January first e.g. Monday or Tuesday
+            YearMonth yearmonth = YearMonth.of(useryear,month);
+            LocalDate FirstDayofmonth = yearmonth.atDay(1);
+            DayOfWeek startday = FirstDayofmonth.getDayOfWeek();
+            return startday.toString();
+
+
+    }
+
+
+    String convertintoMonth(){
+        String Currentmonth = "";
+        indexmonth=month-1;
+        for(int i =0;i<months.length;i++){
+            if(i==indexmonth){
+                Currentmonth=months[i]; // this part of the program converts the index year into a month;
+            }
+        }
+        return Currentmonth;
+    }
+
+    boolean isleapyear(){
+
+
+        return (useryear%4==0) && (useryear%100!=0 || useryear%400==0);
+
+
+    }
+
+    void displaymonthCalander() { // this part of the program displays the current date day and month as a whole, the final process.
+
+            int max=0;
+
+
+            for(int i =0;i<months.length;i++){
+                if((i==3 || i== 5|| i==8 || i==10) && months[i].equals(convertintoMonth()) ){
+                    max=30;
+                }
+                else if((i== 0|| i==2|| i==4|| i==6||i==7||i==9||i==11) && months[i].equals(convertintoMonth())){
+                    max=31;
+                }
+                else if(isleapyear() && months[i].equals(convertintoMonth())){
+                    max=29;
+                }
+                else if(months[i].equals(convertintoMonth()) && i==1){
+                    max=28;
+                }
+
+            }
+        int index=0;
+
+        for(int i =0;i< days.length;i++){
+            if(days[i].equals(displayStartDay())){
+                index=i; // this part stores the index of the day of the week given by displaystartdate() function so we can use it for the print
+            }
+        }
+        for(int date =0;date<max;date++){
+            System.out.println(days[(date+index)%7]+" "+(date+1)+" "+convertintoMonth()+" "+useryear);
+        }
+    }
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+}
+
+
